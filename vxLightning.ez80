#macro lit()
	push	ix
	ld	ix, VX_LIGHT0 + $0
	call	vxDotProduct
	pop	ix
	add	hl, hl
	jr	nc, $+5
	or	a, a
	sbc	hl, hl
	ld	a, (VX_LIGHT0 + $3)
	add	a, l
	cp	32
	jr	c,$+4
	ld	a, 32
#endmacro
#define lit lit(


vxCmdLit:
; compute the position of lightning & light vector in the untransformed model space : apply a WorldtoModel transformation matrix (transpose of bone matrix, or identity if no bone)
; omnipoint light:
; intensity=clamp(max(dot(normalize(vertexPos-lightPos), vertexNormal),0)*2/(d²+1)+ambient,0,1)
; directionnal light:
; intensity=clamp(max(dot(lightvec,vertexNormal),0)+ambient,0,1)
; ix = lightvec, iy=vertexNormal
	ld	ix, VX_LIGHT0_VECTOR
	call	vxDotProduct
	jp	p, $+4+3
	or	a, a
	sbc	hl, hl
	ld	a, (VX_LIGHT0_AMBIANT)
	add	a, l
	cp	32
	ret	c
	ld	a, 32
	ret
vxCmdTransformLight:
; transform the light coordinate with global matrix

	ret


Lit:
;;	ld	ix, VX_LIGHT0_VECTOR

	xor	a, a
	ld	c, (iy+6)
	ld	b, (iy+VX_LIGHT0_VECTOR+0)
	bit	7, c \ jr z, $+3 \ sub a,b
	bit	7, b \ jr z, $+3 \ sub a,c
	mlt	bc
	add	a, b
	ld	c, (iy+7)
	ld	b, (iy+VX_LIGHT0_VECTOR+1)
	bit	7, c \ jr z, $+3 \ sub a,b
	bit	7, b \ jr z, $+3 \ sub a,c
	mlt	bc
	add	a, b
	ld	c, (iy+8)
	ld	b, (iy+VX_LIGHT0_VECTOR+2)
	bit	7, c \ jr z, $+3 \ sub a,b
	bit	7, b \ jr z, $+3 \ sub a,c
	mlt	bc
	add	a, b
; max(a,0)
	jp	p, $+4+1
	xor	a, a
; lightning model is here, infinite directionnal light, no pow
; ambiant lightning=12
	add	a, 12
; min(a,31)
	cp	32
	jr	c, $+4
	ld	a, 31










