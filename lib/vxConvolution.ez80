framebuffer:
	.dl	0
vxScreenData:
	.fill	320*3
; take a 3x3 convolve matrix
; fixed to
; 1,1,1
; 1,8,1
; 1,1,1
vxConvolveFilter:

	ld	hl, (vxFramebuffer)
	ld	de, vxScreenData
	ld	bc, 320*3
	ldir
	ld	(framebuffer), hl
	ld	b, 238
vxLoopFilter:	; for 238
	push	bc
	ld	hl, vxScreenData+320
	ld	ix, (framebuffer)
	ld	bc, -320
	add	ix, bc
	ld	de, VX_PIXEL_SHADER_DATA

	ld	b, 0
LOOPINNER:

	ld	e, (hl)
	ld	d, 8
	ld	a, (de)

	ld	de, 320
	add	hl, de
	ld	de, VX_PIXEL_SHADER_DATA

	ld	e, (hl)
	ld	d, 4
	ex	de, hl
	add	a, (hl)
	ex	de, hl
	
	ld	de, -640
	add	hl, de
	ld	de, VX_PIXEL_SHADER_DATA
	
	ld	e, (hl)
	ld	d, 4
	ex	de, hl
	add	a, (hl)
	ex	de, hl

	ld	de, 320
	add	hl, de
	ld	de, VX_PIXEL_SHADER_DATA


	dec	hl
	ld	e, (hl)
	ld	d, 4
	ex	de, hl
	add	a, (hl)
	ex	de, hl

	inc	hl
	inc	hl
	ld	e, (hl)
	ld	d, 4
	ex	de, hl
	add	a, (hl)
	ex	de, hl
	
	ld	(ix), a
	inc	ix

	djnz	LOOPINNER



	ld	hl, vxScreenData+320
	ld	de, vxScreenData
	ld	bc, 320*2
	ldir
; extract new screen data
	ld	hl, (framebuffer)
	ld	bc, 320
	ldir
	ld	(framebuffer), hl
	pop	bc
	djnz	vxLoopFilter
	ret